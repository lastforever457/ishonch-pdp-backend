// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String       @id @default(uuid())
  firstName   String
  lastName    String
  phone       String
  birthday    DateTime
  email       String?      @unique
  balance     Int          @default(0)
  gender      Gender
  roleId      String
  role        Role?        @relation(fields: [roleId], references: [id])
  groups      Course[]
  status      Status       @default(ACTIVE)
  password    String
}

model Course {
  id              String   @id @default(uuid())
  name            String
  teacherId       String
  teacher         User     @relation(fields: [teacherId], references: [id])
  lessonRoomId    String
  lessonRoom      Room     @relation(fields: [lessonRoomId], references: [id])
  lessonStartTime DateTime
  lessonStartDate DateTime
  lessonEndDate   DateTime
}

model Image {
  id        String   @id @default(uuid())
  filename  String
  imageData Bytes
  createdAt DateTime @default(now())
}

model Room {
  id       String   @id @default(uuid())
  name     String   @unique
  capacity Int
  tables   Int
  chairs   Int
  group    Course[]
}

model Permission {
  id    String @id @default(uuid())
  name  String
  roles Role[] @relation("RolePermissions")
}

model Role {
  id          String       @id @default(uuid())
  name        String
  permissions Permission[] @relation("RolePermissions")
  users       User[]
}

enum Days {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  ODD_DAYS
  EVEN_DAYS
}

enum Gender {
  MALE
  FEMALE
}

enum Status {
  ACTIVE
  BLOCKED
  ARCHIVED
  WAITING
}
